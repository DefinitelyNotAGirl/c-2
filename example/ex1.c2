/*
 * Created Date: Thursday July 13th 2023
 * Author: Lilith
 * -----
 * Last Modified: Thursday August 17th 2023 9:04:51 pm
 * Modified By: Lilith (definitelynotagirl115169@gmail.com)
 * -----
 * Copyright (c) 2023 DefinitelyNotAGirl@github
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include "example/std.h2"

#define test4 void pasted(u64 arg, u16 arg2);

#include "example/ex1.h2"
#include "example/bootinfo.h2"

#pragma cpl 0

#pragma push
#pragma warning disable memory-absolute
export volatile noalloc (6MiB) __bootinfo__ bootInfo;
export volatile noalloc (0x400000) u64 primePageTable;
#pragma pop

/**
    @param test doc comment for "u64 test"
    @param arg doc comment for u32 test
    @desc entry point to the program
*/
void main(u64 test, u32 arg):
    //operator tests
    volatile (rcx) u64 test = 1;
    (rbx) u64 test2 = 3;
    (+12) u32 test3 = 0;
    (rsp) volatile const u64 rsp;
    (rbp) u64 rbp;
    (-8) u64 belowStack = 512;
    (EFER) u64 EFER;
    test2 = test+500;
    test+=500;
    test++;
    test-=100;
    test2 = test-100;
    test--;
    /* comment test */
    test2 = test / 999;
    test/= 9/*this is dumb*/99;
    test2 = test*5000;
    test*=5000;
    test2 = test%250;
    test %= 250;
    arg = 999;

/*ABI-MICROSOFTx64 */void EFIentry(u64 a,u32 b):
    main(a,b);

ABI-SYSTEMVamd64 u64 largeFunc(u64 a,u64 b,u64 c, u256 d):
    u64 i = 512;
    u64 _1  = i++;
    u64 _2  = i++;
    u64 _3  = i++;
    u64 _4  = i++;
    u64 _5  = i++;
    u64 _6  = i++;
    u64 _7  = i++;
    u64 _8  = i++;
    u64 _9  = i++;
    u64 _10 = i++;
    u64 _11 = i++;
    u64 _12 = i++;
    u64 _13 = i++;
    u64 _14 = i++;
    u64 _15 = i++;
    u64 _16 = i++;
    u64 _17 = i++;

char* strtest = "Hello, world!";
export mangling-c u64 malloc(u64 size):
    u64 nsize = 2MiB;
    return nsize;

export u64 calloc(u64 size):
    u64 ksize;
    if(size > 0):
        ksize = 32KiB;
    else:
        ksize = 64M;
    return ksize;

noop void zalloc (u64 size);

ABI-SYSTEMVamd64 u64 error(u64 ec);
